version: '3.8'

services:
  backend:
    image: node:18
    container_name: backend
    working_dir: /app
    volumes:
      - ./backend:/app
      - backend_data:/app/data  # Persistencia de datos espec√≠ficos del backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    command: ["npm", "run", "start"]
    depends_on:
      - db

  frontend:
    image: node:18
    container_name: frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - frontend_data:/app/data  # Persistencia de archivos del frontend
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=production
    command: ["npm", "run", "dev"]
    depends_on:
      - backend

  SQLite:
    image: nouchka/sqlite3
    container_name: SQLite
    volumes:
      - ./data:/root/SQLite  # Volumen de base de datos SQLite
    restart: always

  waf:
    image: owasp/modsecurity-crs
    container_name: waf
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./conf/modsecurity.conf:/etc/modsecurity/modsecurity.conf:ro
      - ./conf/crs-setup.conf/etc/modsecurity/crs-setup.conf:ro
      - ./conf/rules/:/etc/modsecurity/rules:ro
    ports:
      - "8080:80"
    environment:
      - MODSEC_RULE_ENGINE=On
    depends_on:
      - backend

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus  # Persistencia de datos de Prometheus
    depends_on:
      - backend

volumes:
  data:
    driver: local
    driver_opts:
      type: none
      device: /path/to/your/data/directory
      o: bind

  backend_data:
    driver: local
    driver_opts:
      type: none
      device: /path/to/your/backend/data
      o: bind

  frontend_data:
    driver: local
    driver_opts:
      type: none
      device: /path/to/your/frontend/data
      o: bind

  prometheus_data:
    driver: local
    driver_opts:
      type: none
      device: /path/to/your/prometheus/data
      o: bind

networks:
  pong_net:
    driver: bridge
